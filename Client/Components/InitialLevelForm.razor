@using Color = Blazorise.Color
@using EventsManager.Shared.Dtos
@using EventsManager.Shared.Requests
@inject HttpClient Http
@inject IToastService ToastService
@inject NavigationManager Navigation


@if (!IsDone)
{
    <Modal @ref="_modalRef" >
        <ModalContent Size="ModalSize.Fullscreen" Centered>
            <ModalHeader>
                <ModalTitle>Initial Player Skill Calibration</ModalTitle>
            </ModalHeader>
            <ModalBody>
                
                <Steps @ref="_stepsRef" @bind-SelectedStep="_selectedStep">
                    <Items>
                        <Step Name="1">Intro</Step>
                        <Step Name="2">Padel</Step>
                        <Step Name="3">Other sports</Step>
                        <Step Name="4">Submit!</Step>
                    </Items>
                    <Content>
                        <StepPanel Name="1">
                            <Divider></Divider>
                            @if (_alert)
                            {
                                <Alert Color="Color.Danger" Visible>
                                    <AlertMessage>Error</AlertMessage>
                                    <AlertDescription>Something went wrong. Please try again later.</AlertDescription>
                                </Alert>
                            }
                            <h4>Welcome to Our Player Ranking Quiz</h4>
                            <p>This quiz is designed to help us assess your skill level in padel and accurately assign you an initial Elo rating. By understanding your past experience and current abilities, we can ensure that you are paired with other players who are at a similar skill level. This helps make matches more competitive and enjoyable for everyone involved.</p>
                            <p>In the following steps, we will be asking about your padel experience, your experience with other racquet sports, and your specific strengths and weaknesses on the court. All of this information will be used solely for the purpose of determining your initial ranking and will not be shared with third parties.</p>
                            <p>Please answer each question honestly and to the best of your ability. Thank you for taking the time to complete this quiz.</p>
                        </StepPanel>
                        <StepPanel Name="2">
                            <Divider></Divider>
                            <h5>Total years playing Padel:</h5>
                            <Select @bind-SelectedValue="@_initialLevelFormRequest.YearsPlayingPadel" TValue="int">
                                <SelectItem Value="0">Less than 1 year</SelectItem>
                                <SelectItem Value="1">1 year</SelectItem>
                                <SelectItem Value="2">2 years</SelectItem>
                                <SelectItem Value="3">3 years</SelectItem>
                                <SelectItem Value="4">4 years</SelectItem>
                                <SelectItem Value="5">5 years or more</SelectItem>
                            </Select>
                            <Divider></Divider>
                            <h5>Your self-assessed skill level in Padel:</h5>
                            <Select @bind-SelectedValue="@_initialLevelFormRequest.SelfAssessedPadelSkillLevel" TValue="SelfAssessedPadelSkillLevel">
                                <SelectItem Value="SelfAssessedPadelSkillLevel.Beginner">Beginner</SelectItem>
                                <SelectItem Value="SelfAssessedPadelSkillLevel.BeginnerIntermediate">Beginner/Intermediate</SelectItem>
                                <SelectItem Value="SelfAssessedPadelSkillLevel.Intermediate">Intermediate</SelectItem>
                                <SelectItem Value="SelfAssessedPadelSkillLevel.IntermediateAdvanced">Intermediate/Advanced</SelectItem>
                                <SelectItem Value="SelfAssessedPadelSkillLevel.Advanced">Advanced</SelectItem>
                                <SelectItem Value="SelfAssessedPadelSkillLevel.SemiPro">Semi-Professional</SelectItem>
                                <SelectItem Value="SelfAssessedPadelSkillLevel.Pro">Professional</SelectItem>
                            </Select>
                        </StepPanel>
                        <StepPanel Name="3">
                        <Divider></Divider>
                            <h5>Did you play other racket sports before?</h5>
                            <Select @bind-SelectedValue="@_initialLevelFormRequest.PlayedOtherRacketSportsBefore" TValue="bool">
                                <SelectItem Value="false">No</SelectItem>
                                <SelectItem Value="true">Yes</SelectItem>
                            </Select>
                            @if (_initialLevelFormRequest.PlayedOtherRacketSportsBefore)
                            {
                                <Divider></Divider>
                                <h5>Total years played:</h5>
                                <Select @bind-SelectedValue="@_initialLevelFormRequest.OtherRacketSportsYearsPlaying" TValue="int">
                                    <SelectItem Value="0">Less than 1 year</SelectItem>
                                    <SelectItem Value="1">1 year</SelectItem>
                                    <SelectItem Value="2">2 years</SelectItem>
                                    <SelectItem Value="3">3 years</SelectItem>
                                    <SelectItem Value="4">4 years</SelectItem>
                                    <SelectItem Value="5">5 years or more</SelectItem>
                                </Select>
                                <Divider></Divider>
                                <h5>What level?</h5>
                                <Select @bind-SelectedValue="@_initialLevelFormRequest.OtherRacketSportsLevel" TValue="OtherRacketSportsLevel">
                                    <SelectItem Value="OtherRacketSportsLevel.Amateur">Amateur</SelectItem>
                                    <SelectItem Value="OtherRacketSportsLevel.Competitive">Competitive</SelectItem>
                                    <SelectItem Value="OtherRacketSportsLevel.SemiPro">Semi-professional</SelectItem>
                                    <SelectItem Value="OtherRacketSportsLevel.Pro">Professional</SelectItem>
                                </Select>
                            }
                        </StepPanel>
                        <StepPanel Name="4">
                            <h4>Review and Confirm</h4>
                            <p>Please take a moment to review all your responses before proceeding. It's important that the information you provide is accurate and honest, as it will be used to determine your initial Elo rating and to match you with players of a similar skill level. Fair play is a crucial aspect of padel, and it begins here with providing truthful information.</p>
                            <p>Your responses influence not only your own playing experience, but also the experience of others in the community. Misrepresenting your skill level could lead to unbalanced matches, which are less enjoyable for all participants.</p> 
                            <p>Once you are certain that all your answers are correct and truthful, please click the 'Done' button to submit your responses. Thank you for your cooperation and commitment to fair play.</p>
                            <Divider></Divider>
                            <Div Display="Display.Flex" Class="justify-content-center">
                                @if (!_iAmSureFlag)
                                {
                                    <Button Clicked="() => SetToSure(true)" Color="Color.Primary">I have reviewed everything and I'm sure about my responses</Button>
                                }
                            </Div>
                        </StepPanel>
                    </Content>
                </Steps>
                <Div Display="Display.Flex" Class="justify-content-center">
                    @if(_selectedStep != "1" && !_iAmSureFlag)
                    {
                        <Button Color="Color.Secondary" Margin="Margin.Is2.FromEnd" Clicked="() => _stepsRef.PreviousStep()">
                            Previous
                        </Button>
                    }
                    @if(_selectedStep != "4")
                    {
                        <Button Color="Color.Primary" Clicked="() => _stepsRef.NextStep()">
                            Next
                        </Button>
                    }
                    @if (_iAmSureFlag && !_loading)
                    {
                        <Button Margin="Margin.Is2.FromEnd" Color="Color.Primary" @onclick="() => SetToSure(false)" disabled="@_loading">Review again</Button>
                        <Button Color="Color.Success" @onclick="SetDone" disabled="@_loading">Go!</Button>
                    }
                </Div>
            </ModalBody>
        </ModalContent>
    </Modal>
}


@code{
    private bool _loading = false;
    private Modal _modalRef;
    [Parameter]
    public bool IsDone { get; set; }
    private Steps _stepsRef;
    private string _selectedStep = "1";

    private bool _iAmSureFlag = false;
    private bool _alert = false;
    
    private InitialLevelFormRequest _initialLevelFormRequest = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!IsDone)
        {
            await ShowModal();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
    
    private Task ShowModal()
    {
        return _modalRef.Show();
    }
    
    private void SetToSure(bool sure)
    {
        _iAmSureFlag = sure;
    }
    
    private async Task SetDone()
    {
        _alert = false;
        try
        {
            _loading = true;
            var response = await Http.PostAsJsonAsync("Announcement/initial-level-done", _initialLevelFormRequest);
            if (response.IsSuccessStatusCode)
            {
                ToastService.ShowSuccess("You have successfully completed the initial level form.");
                Navigation.NavigateTo("/", forceLoad: true);
            }
            
            if (!response.IsSuccessStatusCode)
            {
                var error = await response.Content.ReadAsStringAsync();
                ToastService.ShowError(error);
            }
        }
        catch (Exception)
        {
            ToastService.ShowError("Something went wrong while getting user information.");
            _loading = false;
            _iAmSureFlag = false;
        }
        finally
        {
            _iAmSureFlag = false;
            _selectedStep = "1";
            _loading = false;
            _alert = true;
        }
    }
}