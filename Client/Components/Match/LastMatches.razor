@using EventsManager.Shared.Responses

@inject IHttpClientFactory HttpClientFactory
@inject IToastService ToastService
@inject NavigationManager NavigationManager

@if (_isLoading)
{
    
}
@if (_matches != null)
{
    <Divider />
    @foreach (var match in _matches)
    {
        <div class="border match-card" @onclick="() => NavigateToMatch(match.Id)">
            <div style="font-size: 12px; text-align: center;">
                @match.StartDateTime.ToLocalTime().ToLongDateString() / @match.StartDateTime.ToLocalTime().ToShortTimeString() - Duration: @match.Duration h
            </div>
            <FluentDivider></FluentDivider>
            <p style="font-size: 14px">
                <b>Average Elo:</b> @match.AverageElo
            </p>
            <p style="font-size: 14px">
                <b>Elo changed:</b> @match.EloChange
            </p>
        </div>
    }
}

@code {
    [Parameter]
    public Guid PlayerId { get; set; }
    
    private List<LastMatchesResponse>? _matches;
    private bool _isLoading = false;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _isLoading = true;
            var http = HttpClientFactory.CreateClient("PadelPoint.ServerAPI.Anonymous");
            _matches = await http.GetFromJsonAsync<List<LastMatchesResponse>>($"player/{PlayerId}/last-matches");
        }
        catch (Exception)
        {
            ToastService.ShowError("Something went wrong, please try again later.");
        }
        finally
        {
            _isLoading = false; 
        }
    }

    private void NavigateToMatch(Guid id)
    {
        NavigationManager.NavigateTo($"/match/{id}/detail");
    }
}

<style>
    .border {
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: white;
    }
        
    .match-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;
        margin-bottom: 15px;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
    }
</style>
