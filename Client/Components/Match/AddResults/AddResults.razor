@using EventsManager.Shared.Requests
@using EventsManager.Shared.Responses
@using EventsManager.Shared.Dtos
@inject HttpClient Http
@inject IToastService ToastService

<div class="modal background" tabindex="-1" style="display: @(Visible ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Scores</h5>
                <button type="button" class="btn-close" @onclick="Cancel"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="Sets" OnValidSubmit="Confirm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="score-grid">
                        <div class="score-labels">
                            <div>Team 1</div>
                            <div>Team 2</div>
                        </div>

                        @foreach(var score in Sets)
                        {
                            <div class="score-set">
                                <small class="set-number">Set @score.SetNumber</small>
                                <InputNumber @bind-Value="score.Team1Score" class="form-control" placeholder="Score Team 1"/>
                                <InputNumber @bind-Value="score.Team2Score" class="form-control" placeholder="Score Team 2"/>
                            </div>
                        }
                    </div>

                    <div class="set-buttons">
                        <button type="button" class="btn btn-primary add-set-button" @onclick="AddSet">Add Set</button>
                        <button type="button" class="btn btn-secondary remove-set-button" @onclick="RemoveSet">Remove Set</button>
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="Confirm">Save Scores</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public bool Visible { get; set; }
    
    [Parameter]
    public List<SetDto>? Sets { get; set; }

    [Parameter]
    public MatchResponse? Match { get; set; }
        
    [Parameter]
    public EventCallback<SetMatchScoreRequest?> ConfirmationChanged { get; set; }

    protected override void OnInitialized()
    {
        if (Sets == null)
        {
            Sets = new List<SetDto> { new() { SetNumber = 1 }, new() { SetNumber = 2 } };
        }
    }

    private void AddSet()
    {
        var nextSetNumber = Sets.Count + 1;
        Sets.Add(new SetDto { SetNumber = nextSetNumber });
    }

    private void RemoveSet()
    {
        if (Sets.Count == 2)
        {
            ToastService.ShowError("You must have at least 2 sets");
            return;
        }
        if (Sets.Any())
        {
            Sets.RemoveAt(Sets.Count - 1);
        }
    }

    private async Task Confirm()
    {
        Visible = false;
        await ConfirmationChanged.InvokeAsync(new SetMatchScoreRequest
        {
            Sets = Sets
        });
    }

    private async Task Cancel()
    {
        Visible = false;
        await ConfirmationChanged.InvokeAsync(null);
    }
}

<style>
    .background{
        background-color: rgba(0, 0, 0, 0.5);
    }

    .score-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
    }

    .score-labels {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        font-weight: bold;
    }

    .score-set {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
    }

    .set-number {
        position: absolute;
        left: 0;
        top: -10px;
        font-size: 0.7em;
    }

    .set-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .add-set-button, .remove-set-button {
        padding: 5px 10px;
        font-size: 0.8em;
    }
</style>
