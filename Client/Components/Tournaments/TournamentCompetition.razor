@using EventsManager.Shared.Responses
@using EventsManager.Client.Components.Match
@using Color = Blazorise.Color

@if (!Tournament.ShowBrackets)
{
    <Alert Style="margin-top: 10px" Color="Color.Info" Visible>
        <AlertMessage>Competition view disabled</AlertMessage>
        <AlertDescription>Right now the competition view is disabled by an admin, will be enabled soon.</AlertDescription>
    </Alert>
}
else
{
    <div>
        <h3>Round Robin Phase</h3>
        @if (Tournament.RoundRobinPhaseGroups == 1 && Tournament.RoundRobinPhaseMatches.Any())
        {
            @foreach (var match in Tournament.RoundRobinPhaseMatches)
            {
                <TournamentMatch Match="@match"></TournamentMatch>
            }
        }
        @if (Tournament.RoundRobinPhaseGroups == 2 && Tournament.RoundRobinPhaseMatches.Any())
        {
            <h4>Group 1</h4>
            @foreach (var match in Tournament.RoundRobinPhaseMatches.Where(x => x.RoundRobinPhaseGroup == 1))
            {
                <TournamentMatch Match="@match"></TournamentMatch>
            }
            <h4>Group 2</h4>
            @foreach (var match in Tournament.RoundRobinPhaseMatches.Where(x => x.RoundRobinPhaseGroup == 2))
            {
                <TournamentMatch Match="@match"></TournamentMatch>
            }
        }
    </div>
}

@code {
    [Parameter]
    public TournamentDetailResponse? Tournament { get; set; }
    
}