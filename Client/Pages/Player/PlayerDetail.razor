@page "/player-detail/{PlayerId:guid}"

@using EventsManager.Shared.Responses
@using EventsManager.Client.Components.Players

@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory
@inject IToastService ToastService

@if (_loading)
{
    <LoadingSpinner></LoadingSpinner>
}
@if (_playerDetail != null)
{
    <PlayerCard Player="_playerDetail"></PlayerCard>
    <Divider></Divider>
    
}

@code {
    [Parameter]
    public Guid PlayerId { get; set; }
    
    private PlayerDetailResponse? _playerDetail;
    private bool _loading;  
    
    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        try
        {
            var http = HttpClientFactory.CreateClient("PadelPoint.ServerAPI.Anonymous");
            _playerDetail = await http.GetFromJsonAsync<PlayerDetailResponse>($"player/{PlayerId}/detail");
        }
        catch (Exception)
        {
            ToastService.ShowError("Something went wrong, please try again later.");
        }
        finally
        {
            _loading = false;
        }
    }
}