@page "/players-ranking"

@using EventsManager.Shared.Responses
@using EventsManager.Client.Components.Players

@inject IHttpClientFactory HttpClientFactory
@inject IToastService ToastService

<div class="title">Current ranking</div>

@if (_loading)
{
    for (var i = 0; i < 5; i++)
    {
        <PlayerCardSkeleton></PlayerCardSkeleton>
    }
}
else if(_players != null)
{
    @foreach (var player in _players)   
    {
        <PlayerCard Player="player"></PlayerCard>
    }
}
else
{
    <p>There are no players to show.</p>
}

@code {
    private List<PlayerDetailResponse>? _players;
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        try
        {
            var http = HttpClientFactory.CreateClient("PadelPoint.ServerAPI.Anonymous");
            _players = await http.GetFromJsonAsync<List<PlayerDetailResponse>>("player/ranking");
        }
        catch (Exception)
        {
            ToastService.ShowError("Something went wrong, please try again later.");
        }
        finally
        {
            _loading = false;
        }
    }
}

<style>
    .title{
        font-size: 2rem;
        margin-bottom: 1rem;
        text-align: center;
    }
</style>