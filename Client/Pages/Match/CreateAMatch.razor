@page "/create-match"

@using EventsManager.Shared.Requests
@using EventsManager.Shared.Responses
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IToastService ToastService

<h3>Create Match</h3>

<form id="newMatchForm" class="my-form" @onsubmit="HandleValidSubmit">
    <div class="form-group">
        <label>Start Date:</label>
        <input type="date" id="startDateTime" @bind="_newMatch.StartDateTime" class="form-control" placeholder="Start Date">
    </div>
    <div class="form-group">
        <label>End Date:</label>
        <input type="date" id="endDateTime" @bind="_newMatch.EndDateTime" class="form-control" placeholder="End Date">
    </div>
    <div class="form-group">
        <label for="location">Location:</label>
        <input type="text" id="location" @bind="_newMatch.Location" name="location" class="form-control">
    </div>
    <button type="submit" class="btn btn-primary">Create Match</button>
</form>


@code {
    private CreateMatchRequest _newMatch = new()
    {
        StartDateTime = DateTime.Now,
        EndDateTime = DateTime.Now.AddHours(1.5)
    };

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("match", _newMatch);
        
        if(response.IsSuccessStatusCode)
        {
            var createdMatch = await response.Content.ReadFromJsonAsync<CreateMatchResponse>();
            NavManager.NavigateTo($"/match/{createdMatch?.Id}/detail");
            ToastService.ShowSuccess("Match created successfully.");
        }
        else
        {
            ToastService.ShowError("Something went wrong. Please try again later.");
        }
    }
}
