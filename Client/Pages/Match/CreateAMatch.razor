@page "/create-match"

@using EventsManager.Shared.Requests
@using EventsManager.Shared.Responses
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IToastService ToastService

<h3>Create Match</h3>

<form id="newMatchForm" class="my-form" @onsubmit="HandleValidSubmit">
    <div class="form-group">
        <label>Select the date and starting time</label>
        <DateEdit TValue="DateTime" @bind-Date="@_start" InputMode="DateInputMode.DateTime"/>    
    </div>
    <div class="form-group">
        <label>Duration</label>
        <Select @bind-SelectedValue="@_durationSelect" TValue="int">
            <SelectItem Value="1">1 hour</SelectItem>
            <SelectItem Value="2">1,5 hours</SelectItem>
            <SelectItem Value="3">2 hours</SelectItem>
            <SelectItem Value="4">2,5 hours</SelectItem>
            <SelectItem Value="5">3 hours</SelectItem>
        </Select>
    </div>
    <div class="form-group">
        <label for="location">Location:</label>
        <input type="text" id="location" @bind="@_location" name="location" class="form-control">
    </div>
    <div class="form-group">
        <label for="location">Price per hour:</label>
        <NumericEdit TValue="double" @bind-Value="@_pricePerHour" />    
    </div>
    <button type="submit" class="btn btn-primary">Create Match</button>
</form>


@code {

    private DateTime _start = DateTime.Now;
    private int _durationSelect = 1;
    private string _location = "";
    private double _pricePerHour;

    private async Task HandleValidSubmit()
    {
        var durationInHours = _durationSelect switch
        {
            1 => 1,
            2 => 1.5,
            3 => 2,
            4 => 2.5,
            5 => 3,
            _ => 1
            };

        var request = new CreateMatchRequest
        {
            StartDate = _start,
            Duration = durationInHours,
            Location = _location,
            PricePerHour = _pricePerHour
        };
        var response = await Http.PostAsJsonAsync("match", request);
        
        if(response.IsSuccessStatusCode)
        {
            var createdMatch = await response.Content.ReadFromJsonAsync<CreateMatchResponse>();
            NavManager.NavigateTo($"/match/{createdMatch?.Id}/detail");
            ToastService.ShowSuccess("Match created successfully.");
        }
        else
        {
            ToastService.ShowError("Something went wrong. Please try again later.");
        }
    }
}
