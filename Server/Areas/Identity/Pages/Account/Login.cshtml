@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use a service to log in.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                                about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    if (provider.DisplayName.Equals("Google"))
                                    {
                                        <button id="googleLoginButton" type="submit" 
                                                name="provider" 
                                                value="@provider.Name" 
                                                title="Log in using your @provider.DisplayName account"
                                                style="width: 100%; display: flex; align-items: center; justify-content: center; padding: 10px; border: 2px solid grey; background-color: white; color: #1a1e21; font-size: 20px;">
                                            <img src="/SignInnLogos/google-logo.png" 
                                                 alt="@provider.DisplayName logo" 
                                                 style="width: 30px; margin-right: 10px;" />
                                            <span id="googleLoginText">Log in with @provider.DisplayName</span>
                                            <div id="googleSpinner" class="spinner-border text-primary" role="status" style="display: none;">
                                                <span class="visually-hidden">Loading...</span>
                                            </div>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
    <div class="col-md-4">
        <section>
            <form id="account" method="post">
                <h2>Or use a local account to log in.</h2>
                <hr/>
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com"/>
                    <label asp-for="Input.Email" class="form-label">Email</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password"/>
                    <label asp-for="Input.Password" class="form-label">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" asp-for="Input.RememberMe"/>
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">
                        <span id="loginText">Log in</span>
                        <div id="spinner" class="spinner-border text-light" role="status" style="display: none;">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                    <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
    // On load
    window.addEventListener('load', function() {
        var loginForm = document.getElementById('account');
        var loginSubmitButton = document.getElementById('login-submit');
        var googleLoginButton = document.getElementById('googleLoginButton');
    
        // Reset button states
        function resetButtons() {
            document.getElementById('loginText').style.display = 'block';
            document.getElementById('spinner').style.display = 'none';
    
            googleLoginButton.style.pointerEvents = '';
            document.getElementById('googleLoginText').style.display = 'block';
            document.getElementById('googleSpinner').style.display = 'none';
        }
    
        // On Login Form Submit
        loginForm.addEventListener('submit', function(e) {
            // Check if form is valid (this depends on the client-side validation library you're using)
            if (!loginForm.checkValidity()) {
                e.preventDefault();  // Prevent form from submitting
                resetButtons();     // Reset the button states
            } else {
                // Show loading spinner
                document.getElementById('loginText').style.display = 'none';
                document.getElementById('spinner').style.display = 'block';
            }
        });
    
        // On Google Login Button Click
        googleLoginButton.addEventListener('click', function() {
            googleLoginButton.style.pointerEvents = 'none';
            document.getElementById('googleLoginText').style.display = 'none';
            document.getElementById('googleSpinner').style.display = 'block';
        });
    });

    </script>
}
